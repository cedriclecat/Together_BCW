function Event(e,t,n,i,a,s,r,o,l,p,d,c,u,m,f,v){this.id=e,this.collapseId=t,this.name=n,this.description=i,this.date=a,this.time=s,this.maxmember=r,this.members=o,this.location=l,this.price=p,this.picture=d,this.tags=c,this.promoted=u,this.timestamp=m,this.pictureSlider=f,this.createdby=v}function inWords(e){if((e=e.toString()).length>9)return"overflow";if(n=("000000000"+e).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/),n){var t="";return t+=0!=n[1]?(a[Number(n[1])]||b[n[1][0]]+" "+a[n[1][1]])+"crore ":"",t+=0!=n[2]?(a[Number(n[2])]||b[n[2][0]]+" "+a[n[2][1]])+"lakh ":"",t+=0!=n[3]?(a[Number(n[3])]||b[n[3][0]]+" "+a[n[3][1]])+"thousand ":"",t+=0!=n[4]?(a[Number(n[4])]||b[n[4][0]]+" "+a[n[4][1]])+"hundred ":"",t+=0!=n[5]?(""!=t?"and ":"")+(a[Number(n[5])]||b[n[5][0]]+""+a[n[5][1]]):"",t.charAt(0).toUpperCase()+t.slice(1)}}angular.module("event",[]),angular.module("profile",["ngMessages","ngAnimate","ui.bootstrap"]),angular.module("auth",["ngMessages"]),angular.module("admin",[]),function(){"use strict";var e=function(e,t,n){var i=new XMLHttpRequest;i.open("GET","/api/getuserid",!1),i.send(null);var a="";200==i.status&&(a=i.responseText,a=a.split('"')[1]);var s=new XMLHttpRequest;if(s.open("GET","/api/events",!1),s.send(null),200===s.status){for(var r=JSON.parse(s.responseText),o=[],l=[],p=r.length;p>0;p--){var d=r[p-1].location.split("/./")[0];d=d.replace(" ","+");var c="https://www.google.com/maps/embed/v1/place?key=AIzaSyAiapygRLC6a3O-pyXahU2l47I8pMV2Pdw&q="+d,u=new Event(r[p-1].id,inWords(p+1),r[p-1].name,r[p-1].description,r[p-1].date,r[p-1].time,r[p-1].maxMember,r[p-1].members,r[p-1].location.split("/./")[0],r[p-1].price,r[p-1].pictureUrl,n.trustAsResourceUrl(c),r[p-1].promoted,r[p-1].TIMESTAMP,r[p-1].pictureSlider,r[p-1].createdby);r[p-1].members.indexOf(a)>=0&&l.push(u),o.push(u)}e.events=o,e.GaEvents=l,e.knoppen=function(){for(var e=l.length;e>0;e--){var t=document.getElementById(l[e-1].id);t.disabled=!0,t.className="btn btn-info btn-responsive active disapprove",t.firstChild.className="fa fa-remove fa-lg",t.nextSibling.className="btn btn-info btn-responsive approve",t.nextSibling.firstChild.className="fa fa-check fa-lg"}},e.ikGa=function(e){var t=e.currentTarget.id,n={id:t},i=new XMLHttpRequest;i.open("POST","/api/events",!0),i.setRequestHeader("Content-type","application/json"),i.send(JSON.stringify(n));var a=document.getElementById(t);a.className="btn btn-info btn-responsive active disapprove",a.firstChild.className="fa fa-remove fa-lg",a.nextSibling.className="btn btn-info btn-responsive approve",a.nextSibling.firstChild.className="fa fa-check fa-lg"},e.ikGaNiet=function(e){var t=e.currentTarget.previousSibling.id,n={id:t};s.open("POST","/api/events/ikganiet",!0),s.setRequestHeader("Content-type","application/json"),s.send(JSON.stringify(n));var i=document.getElementById(t);i.disabled=!1,i.className="btn btn-info btn-responsive approve",i.firstChild.className="fa fa-check fa-lg",i.nextSibling.className="btn btn-info btn-responsive active disapprove",i.nextSibling.firstChild.className="fa fa-remove fa-lg"}}};angular.module("event",[]);angular.module("event").controller("EventsController",["$scope","$http","$sce",e])}();var a=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],b=["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"];
//# sourceMappingURL=data:application/json;base64,
